{"version":3,"file":"index.js","mappings":"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","sources":["webpack://convert-classic-to-gutenberg/./src/utils/converter.js","webpack://convert-classic-to-gutenberg/external window [\"wp\",\"blockLibrary\"]","webpack://convert-classic-to-gutenberg/external window [\"wp\",\"blocks\"]","webpack://convert-classic-to-gutenberg/external window [\"wp\",\"components\"]","webpack://convert-classic-to-gutenberg/external window [\"wp\",\"coreData\"]","webpack://convert-classic-to-gutenberg/external window [\"wp\",\"data\"]","webpack://convert-classic-to-gutenberg/external window [\"wp\",\"element\"]","webpack://convert-classic-to-gutenberg/external window [\"wp\",\"htmlEntities\"]","webpack://convert-classic-to-gutenberg/external window [\"wp\",\"i18n\"]","webpack://convert-classic-to-gutenberg/external window [\"wp\",\"url\"]","webpack://convert-classic-to-gutenberg/webpack/bootstrap","webpack://convert-classic-to-gutenberg/webpack/runtime/compat get default export","webpack://convert-classic-to-gutenberg/webpack/runtime/define property getters","webpack://convert-classic-to-gutenberg/webpack/runtime/hasOwnProperty shorthand","webpack://convert-classic-to-gutenberg/webpack/runtime/make namespace object","webpack://convert-classic-to-gutenberg/./src/index.js"],"sourcesContent":["import { registerCoreBlocks } from '@wordpress/block-library'\nimport { getBlockTypes, serialize, rawHandler, createBlock } from '@wordpress/blocks'\n\nconst blocks = getBlockTypes()\nif ( blocks.length === 0 ) {\n    registerCoreBlocks();\n}\n\nexport function checkIsPostClassic( postContent ) {\n    if ( postContent.includes( '<!--' ) ) {\n        return false;\n    }\n    return true;\n}\n\nexport function classicToBlocks( postContent ) {\n\tvar blocks = rawHandler( { \n        HTML: postContent\n    } );\n    return serialize( blocks );\n}","module.exports = window[\"wp\"][\"blockLibrary\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"htmlEntities\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { __ } from '@wordpress/i18n'\nimport { TextControl, Spinner, Button } from '@wordpress/components';\nimport { useState, render, Fragment } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { addQueryArgs } from '@wordpress/url';\n\nimport { checkIsPostClassic, classicToBlocks } from './utils/converter';\n\nfunction ConvertToClassic() {\n\n    const [ inputSearch, setInputSearch ] = useState( '' );\n    const [ searchTerm, setSearchTerm ] = useState( '' );\n\tconst [ pagesToConvert, setPageToConvert ] = useState( [] );\n    const [ currentPage, setCurrentPage ] = useState( 1 );\n    const [ postsPerPages, setPostsPerPages ] = useState( 15 );\n    const [ postType, setPostType ] = useState( 'page' );\n    const [ editor, setEditor ] = useState( 'classic' );\n    const [ pagesConverting, setPagesConverting ] = useState( [] );\n    const [ allChecked, setAllChecked ] = useState( false );\n\n    const { pages, hasResolved } = useSelect(\n        ( select ) => {\n            const query = {\n                per_page: postsPerPages,\n                page: currentPage\n            };\n\n            if ( searchTerm ) {\n                query.search = searchTerm;\n                //query.page = 1;\n            }\n\n            const selectorArgs = [ 'postType', postType, query ];\n            return {\n                pages: select( coreDataStore ).getEntityRecords(\n                    ...selectorArgs\n                ),\n                hasResolved: select( coreDataStore ).hasFinishedResolution(\n                    'getEntityRecords',\n                    selectorArgs\n                ),\n            };\n        },\n        [ searchTerm, currentPage, postsPerPages, postType, editor ]\n    );\n\n    const excludedPostTypes = [ 'attachment', 'wp_navigation', 'wp_block' ];\n    const { types } = useSelect(\n        ( select ) => {\n            const query = {\n                per_page: -1,\n                viewable: true\n            };\n            return {\n                types: select( coreDataStore ).getPostTypes(\n                    query\n                )?.filter(\n                    ( { visibility, slug } ) =>\n                        visibility.show_ui && ! excludedPostTypes.includes( slug )\n                ),\n            };\n        },\n        [ postType ]\n    );\n\n    const { getEntityRecord } = useSelect( coreDataStore );\n    const { saveEntityRecord } = useDispatch( coreDataStore );\n\n\tconst convertPages = ( classic ) => {\n        var pagesConverted = [ ... pagesToConvert ];\n\t\tpagesToConvert.forEach( function ( pageId ) {\n\t\t\tconst   objectPost = getEntityRecord( 'postType', postType, pageId )\n            let postContent = objectPost.content.raw;\n\t\t\tif ( classic ) {\n                const isClassic = checkIsPostClassic( objectPost.content.raw );\n                if ( isClassic ) {\n                    postContent = classicToBlocks( objectPost.content.raw );\n                }                \n            } else {\n                postContent = objectPost.content.rendered\n            }\n\n            if ( postContent ) {\n                // Update post                    \n                return saveEntityRecord( 'postType', objectPost.type, { id: pageId, content: postContent } )\n                .then( ( response ) => {\n                    // Set this post is converting\n                    setPagesConverting( oldPagesConverting => [ ...oldPagesConverting, pageId ] );\n                    // Remove this post from post to convert\n                    const index = pagesConverted.findIndex( id =>  id === pageId );\n                    if ( index > -1 ) {\n                        pagesConverted = [ ...pagesConverted.slice( 0, index ), ...pagesConverted.slice( index + 1 ) ]\n                    }\n                    setAllChecked( false )\n                    return response;\n                } )\n                .catch( ( err ) => {\n                    console.log(err)\n                } );\n            }\n\t\t} )\n        // Empty the pages which are converted\n        setPageToConvert( pagesConverted );\n    }\n\n    const changePage = ( event ) => {\n        setAllChecked( false )\n        setPageToConvert( [] )\n        if ( event.target.name === 'prev') {\n            if ( currentPage >= 2 ) {\n                setCurrentPage( parseInt( currentPage ) - 1 )\n            }\n        }\n        if ( event.target.name === 'next') {\n            setCurrentPage( parseInt( currentPage ) + 1 )\n        }\n    }\n\n    const handleSearch = () => {\n        if ( inputSearch ) {\n            setSearchTerm( inputSearch )\n        } else {\n            setSearchTerm( '' )\n        }\n    }\n\n    const emptySearch = () => {\n        setInputSearch( '' )\n        setSearchTerm( '' )\n        setCurrentPage( 1 )      \n    }\n\n    const handleSetPostsPerPage = ( event ) => {\n        setPostsPerPages( event.target.value )\n    }\n \n    return (\n        <div>\n            <div className=\"cctg-header\">\n                <TypesList { ... { types, postType, setPostType, setCurrentPage, setPagesConverting, setPageToConvert, setAllChecked  } } />\n                <EditorList { ... { editor, setEditor, setCurrentPage, setPagesConverting, setPageToConvert, setAllChecked } } />\n                <TextControl\n                    label={ __( 'Search', 'classic-to-gutenberg' ) }\n                    value={ inputSearch }\n                    onChange={ setInputSearch }\n                    type=\"search\"\n                />\n                <Button variant=\"secondary\" onClick={ () => handleSearch() } icon=\"search\" className=\"search-submit\" label={ __( 'Search', 'classic-to-gutenberg' ) } ></Button>\n                { ( searchTerm ) && (\n                    <Button variant=\"secondary\" onClick={ () => emptySearch() } icon=\"no\" className=\"search-clear\" label={ __( 'Clear search', 'classic-to-gutenberg' ) } ></Button>\n                ) }               \n                <div className=\"cctg-pagination\">\n                    <div className=\"components-base-control-wrapper\">\n                        <label htmlFor=\"cctg-perpage\">{ __( 'Posts per page', 'classic-to-gutenberg' ) }</label>\n                        <select name=\"cctg-perpage\" id=\"cctg-perpage\" value={ postsPerPages } onChange={ handleSetPostsPerPage }>\n                            <option value=\"15\">15</option>\n                            <option value=\"25\">25</option>\n                            <option value=\"50\">50</option>\n                        </select>\n                    </div>\n                    { ( currentPage > 2 ) && (\n                        <Button variant=\"secondary\" onClick={ () => setCurrentPage( 1 ) } >{ __( 'First page', 'classic-to-gutenberg' ) }</Button>\n                    ) }  \n                    <Button variant=\"secondary\" onClick={ changePage } name=\"prev\" icon=\"arrow-left-alt\" label={ __( 'Prev Page', 'classic-to-gutenberg' ) }></Button>\n                    <TextControl\n                        hideLabelFromVision={ true }\n                        label={ __( 'Current page', 'classic-to-gutenberg' ) }\n                        value={ currentPage }\n                        onChange={ setCurrentPage }\n                        type=\"number\"\n                    />\n                    <Button variant=\"secondary\" onClick={ changePage } name=\"next\" icon=\"arrow-right-alt\" label={ __( 'Next Page', 'classic-to-gutenberg' ) } ></Button>\n                </div>\n            </div>\n            <PagesList { ... { editor, hasResolved, pages, pagesToConvert, setPageToConvert, pagesConverting, allChecked, setAllChecked } } />\n            <div className=\"cctg-footer\">\n                <Button variant=\"primary\" onClick={ () => convertPages( true ) }>\n                    { __( 'Convert selected pages to Gutenberg', 'classic-to-gutenberg' ) }\n                </Button>\n                <Button variant=\"secondary\" onClick={ () => convertPages( false ) }>\n                    { __( 'Revert selected pages to Classic', 'classic-to-gutenberg' ) }\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nfunction TypesList( { types, postType, setPostType, setCurrentPage, setPagesConverting, setPageToConvert, setAllChecked } ) {\n    if ( ! types?.length ) {\n        return <div>{ __( 'No types', 'classic-to-gutenberg' ) }</div>;\n    }\n\n    const handleChangePostType = ( event ) => {\n        setCurrentPage( 1 )\n        setAllChecked( false )\n        setPageToConvert( [] )\n        setPagesConverting( [] )\n        setPostType( event.target.value )\n    }\n\n    return(\n        <div className=\"components-base-control-wrapper\">\n            <label htmlFor=\"cctg-types\">{ __( 'Post type', 'classic-to-gutenberg' ) }</label>\n            <select name=\"cctg-types\" id=\"cctg-types\" value={ postType } onChange={ handleChangePostType }>\n                { types?.map( ( type ) => {\n                    return (\n                        <option value={ type.slug } key={ type.slug }>\n                            { type.name }\n                        </option>\n                    )\n                } ) }\n            </select>\n        </div>\n    )\n}\n\nfunction EditorList( { editor, setEditor, setCurrentPage, setPagesConverting, setPageToConvert, setAllChecked } ) {\n    const handleChangeEditor = ( event ) => {\n        setCurrentPage( 1 )\n        setAllChecked( false )\n        setPageToConvert( [] )\n        setPagesConverting( [] )\n        setEditor( event.target.value )\n    }\n\n    return(\n        <div className=\"components-base-control-wrapper\">\n            <label htmlFor=\"cctg-editor\">{ __( 'Editor', 'classic-to-gutenberg' ) }</label>\n            <select name=\"cctg-editor\" id=\"cctg-editor\" value={ editor } onChange={ handleChangeEditor }>\n                <option value=\"classic\">{ __( 'Classic', 'classic-to-gutenberg' ) }</option>\n                <option value=\"gutenberg\">{ __( 'Gutenberg', 'classic-to-gutenberg' ) }</option>\n                <option value=\"\">{ __( 'Both', 'classic-to-gutenberg' ) }</option>\n            </select>\n        </div>\n    )\n}\n\nfunction PagesList( { editor, hasResolved, pages, pagesToConvert, setPageToConvert, pagesConverting, allChecked, setAllChecked } ) {\n\n    if ( ! hasResolved && ! pages?.length ) {\n        return <Spinner />;\n    }\n    if ( ! pages?.length ) {\n        return <div>{ __( 'No posts', 'classic-to-gutenberg' ) }</div>;\n    }\n\n    const addPageToConvert = ( event ) => {\n\t\tvar pagesArr = [ ... pagesToConvert ];\n\t\tconst value = parseInt( event.target.value )\n\t\tconst index = pagesArr.findIndex( id =>  id === value);\n\t\tif( index > -1 ) {\n\t\t\tpagesArr = [ ...pagesArr.slice( 0, index ), ...pagesArr.slice( index + 1 ) ]\n\t\t} else {\n\t\t\tpagesArr.push( value );\n\t\t}\n\t\tsetPageToConvert( pagesArr );\n\t}\n\n    const checkAll = ( event ) => {\n        let checked = event.target.checked\n        setAllChecked( checked )\n        var pagesID = []\n        if ( ! allChecked ) { // ¯\\_(ツ)_/¯\n            { pages?.map( ( page ) => {\n                pagesID.push( page.id )\n            } ) }\n        }\n        setPageToConvert( pagesID )\n    }\n\n    return (\n\t\t<Fragment>\n\t\t\t<table className=\"wp-list-table widefat striped table-view-list\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className=\"check-column\">\n                            <label htmlFor=\"checkAll\" className=\"screen-reader-text\">{ __( 'Select/Unselect all', 'classic-to-gutenberg' ) }</label>\n                            <input type=\"checkbox\" name=\"checkAll\" onChange={ checkAll } checked={ allChecked } />\n                        </td>\n\t\t\t\t\t\t<td>{ __( 'Title', 'classic-to-gutenberg' ) }</td>\n                        <td>{ __( 'Editor', 'classic-to-gutenberg' ) }</td>\n                        <td>{ __( 'Link', 'classic-to-gutenberg' ) }</td>\n                        <td>{ __( 'Edit link', 'classic-to-gutenberg' ) }</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{ pages?.map( ( page ) => {\n\n                        const isClassic = checkIsPostClassic( page.content.raw );\n\n                        if ( editor && isClassic && 'classic' !== editor ) {\n                            return\n                        }\n                        if ( editor && ! isClassic && 'gutenberg' !== editor ) {\n                            return\n                        }\n\n                        return (\n                            <tr key={ page.id } data-converting={ pagesConverting.includes( page.id ) }>\n                                <th className=\"check-column\" scope=\"row\">\n                                    <input type=\"checkbox\" name={ page.id } value={ page.id } onChange={ addPageToConvert } checked={ pagesToConvert.includes( page.id ) } />\n                                </th>\n                                <td>{ decodeEntities( page.title.rendered ) }</td>\n                                <td className=\"cctg-editor\">{ isClassic ? __( 'Classic', 'classic-to-gutenberg' ) : __( 'Gutenberg', 'classic-to-gutenberg' ) }</td>\n                                <td><a href={ page.link }>{ __( 'View', 'classic-to-gutenberg' ) }</a></td>\n                                <td><a href={ addQueryArgs( 'post.php', {\n                                    post: page.id,\n                                    action: 'edit'\n                                } ) }>{ __( 'Edit', 'classic-to-gutenberg' ) }</a></td>\n                            </tr>\n                        )\n                    } ) }\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</Fragment>\n    );\n}\n \nwindow.addEventListener(\n    'load',\n    function () {\n        render(\n            <ConvertToClassic />,\n            document.querySelector( '#classic-to-gutenberg' )\n        );\n    },\n    false\n);"],"names":["registerCoreBlocks","getBlockTypes","serialize","rawHandler","createBlock","blocks","length","checkIsPostClassic","postContent","includes","classicToBlocks","HTML","__","TextControl","Spinner","Button","useState","render","Fragment","useSelect","useDispatch","store","coreDataStore","decodeEntities","addQueryArgs","ConvertToClassic","inputSearch","setInputSearch","searchTerm","setSearchTerm","pagesToConvert","setPageToConvert","currentPage","setCurrentPage","postsPerPages","setPostsPerPages","postType","setPostType","editor","setEditor","pagesConverting","setPagesConverting","allChecked","setAllChecked","pages","hasResolved","select","query","per_page","page","search","selectorArgs","getEntityRecords","hasFinishedResolution","excludedPostTypes","types","viewable","getPostTypes","filter","visibility","slug","show_ui","getEntityRecord","saveEntityRecord","convertPages","classic","pagesConverted","forEach","pageId","objectPost","content","raw","isClassic","rendered","type","id","then","response","oldPagesConverting","index","findIndex","slice","catch","err","console","log","changePage","event","target","name","parseInt","handleSearch","emptySearch","handleSetPostsPerPage","value","TypesList","handleChangePostType","map","EditorList","handleChangeEditor","PagesList","addPageToConvert","pagesArr","push","checkAll","checked","pagesID","title","link","post","action","window","addEventListener","document","querySelector"],"sourceRoot":""}